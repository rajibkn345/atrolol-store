{{ 'section-image-with-text.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign loading = 'lazy'
  assign fetchpriority = 'low'
  if section.index < 2
    assign loading = 'eager'
    assign fetchpriority = 'high'
  endif

  assign desktop_content_alignment = section.settings.desktop_content_alignment
  assign mobile_content_alignment = section.settings.mobile_content_alignment
  if mobile_content_alignment == 'inherit'
    assign mobile_content_alignment = desktop_content_alignment
  endif

  assign image = section.settings.image
  assign image_position = section.settings.image_position
  assign alt_image = image.alt | default: shop.name | escape
  assign motion_delay = 0

  assign badge_block = section.blocks | where: 'type', 'badge' | first

  if badge_block != blank
    assign words = badge_block.settings.text | strip | split: ''
    assign total_words = badge_block.settings.text | strip | split: ' ' | size
    assign str = ''
    for word in words
      assign str = str | append: word
    endfor
    if total_words > 1
      assign str = str | append: ' '
    endif
    assign str_length = str | size
    assign str_index = str_length | minus: 1
  endif
-%}

{%- capture sizes -%}(min-width: 768px) calc(min({{ settings.page_width }}px, 100vw) * {{ section.settings.image_width }} / 100), calc(100vw - 3rem){%- endcapture -%}

{% render 'divider',
  show_divider: section.settings.show_section_divider,
  divider_width: section.settings.divider_width
%}

{%- style -%}
  {%- if badge_block != blank and str_length > 2 -%}
    #section-{{ section.id }} .image-with-text__badge {
      --char-length: {{ str_length }};
      --inner-angle: calc((360 / var(--char-length)) * 1deg);
      --character-size: 1.2;
      --radius: calc(var(--character-size) / (sin(var(--inner-angle))) * -1ch);

      --badge-radius: calc(var(--radius) * -2 * 1.3);
      --badge-size: var(--badge-radius);
      --badge-image-size: calc(var(--badge-size) * 0.36);
    }
  {%- endif -%}
{%- endstyle -%}

<div
  id="section-{{ section.id }}"
  class="section section--padding image-with-text image-with-text--image-{{ image_position }}{% if badge_block != blank %} image-with-text--show-badge{% endif %} color-{{ section.settings.color_scheme }}"
  style="--section-padding-top: {{ section.settings.padding_top }}px; --section-padding-bottom: {{ section.settings.padding_bottom }}px;"
>
  <div class="section__container page-width page-width--{{ section.settings.container }}">
    <div
      class="image-with-text__wrapper flex flex-col md:flex-row gap-y-6"
      style="--image-width: {{ section.settings.image_width }}%;"
    >
      <div
        class="image-with-text__media self-{{ section.settings.desktop_content_position }} relative order-first{% if image_position == 'left' %} md:order-first{% else %} md:order-last{% endif %}"
      >
        <div class="hover-wrapper blocks-radius">
          <motion-element
            data-motion="zoom-out"
            data-motion-delay="{{ motion_delay }}"
            class="block media-wrapper{% if image == blank  %} bg-none{% endif %}"
            style="--aspect-ratio: {{ image.aspect_ratio | default: '1/1' }};"
          >
            {%- if image != blank -%}
              {{-
                image
                | image_url: width: 2000
                | image_tag:
                  loading: loading,
                  fetchpriority: fetchpriority,
                  sizes: sizes,
                  width: image.width,
                  height: image.height,
                  widths: '300,400,500,600,700,800,900,1000,1200,1400,1600,1800,2000',
                  alt: alt_image,
                  class: 'hover-scale-up',
                  is: 'image-lazy'
              -}}
            {%- else -%}
              {{ 'image' | placeholder_svg_tag: 'placeholder-svg w-full h-full hover-scale-up' }}
            {%- endif -%}
          </motion-element>
          {%- assign motion_delay = motion_delay | plus: 50 -%}
        </div>

        {%- if badge_block -%}
          {%- liquid
            assign image_badge = badge_block.settings.image
            assign alt_image_badge = image_badge.alt | default: shop.name | escape
          -%}
          <div class="image-with-text__badge image-with-text__badge--mobile-{{ badge_block.settings.position_mobile }} flex items-center justify-center absolute color-{{ badge_block.settings.color_scheme }} rounded">
            {%- if badge_block.settings.text != blank and str_length > 2 -%}
              <div class="split-chars absolute flex items-center justify-center w-full h-full z-1 bg-none text-upper">
                {%- for i in (0..str_index) -%}
                  {%- assign char = str | slice: i, 1 -%}
                  <span style="--char-id: {{ i }};">
                    {{- char -}}
                  </span>
                {%- endfor -%}
              </div>
            {%- endif -%}
            <div
              class="badge__icon block absolute rounded"
              style="--aspect-ratio: 1;"
            >
              {%- if image_badge != blank -%}
                {{-
                  image_badge
                  | image_url: width: 400
                  | image_tag:
                    loading: loading,
                    fetchpriority: fetchpriority,
                    width: image_badge.width,
                    height: image_badge.height,
                    widths: '120,150,300,400',
                    alt: alt_image_badge,
                    class: 'block'
                -}}
              {%- else -%}
                {{ 'image' | placeholder_svg_tag: 'placeholder-svg w-full h-full' }}
              {%- endif -%}
            </div>
          </div>
        {%- endif -%}
      </div>
      <div class="image-with-text__inner flex-1 md:flex items-{{ section.settings.desktop_content_position }}">
        <div class="image-with-text__content w-full rich-text md:text-{{ desktop_content_alignment }} text-{{ mobile_content_alignment }}">
          {%- for block in section.blocks -%}
            {%- liquid
              assign desktop_iwt_alignment = desktop_content_alignment | replace: 'left', 'start' | replace: 'right', 'end'
              assign mobile_iwt_alignment = mobile_content_alignment | replace: 'left', 'start' | replace: 'right', 'end'
              assign classes = 'md:justify-' | append: desktop_iwt_alignment | append: ' justify-' | append: mobile_iwt_alignment
            -%}
            {%- case block.type -%}
              {%- when 'subheading' -%}
                <motion-element
                  class="rich-text__subheading text-subheading block"
                  data-motion="fade-up"
                  data-motion-delay="{{ motion_delay }}"
                  {{ block.shopify_attributes }}
                >
                  {{ block.settings.subheading }}
                </motion-element>
                {%- assign motion_delay = motion_delay | plus: 50 -%}
              {%- when 'heading' -%}
                <h2
                  class="rich-text__heading {{ block.settings.heading_size }}"
                  {{ block.shopify_attributes }}
                >
                  <motion-element data-motion="fade-up" data-motion-delay="{{ motion_delay }}" class="block">
                    {% render 'highlight-text',
                      hl_text: block.settings.heading,
                      hl_style: block.settings.highlight_style,
                      hl_font_style: block.settings.highlight_font_style,
                      hl_style_color: block.settings.highlight_style_color,
                      hl_text_color: block.settings.highlight_text_color
                    %}
                  </motion-element>
                </h2>
                {%- assign motion_delay = motion_delay | plus: 50 -%}
              {%- when 'text' -%}
                <motion-element
                  class="block rich-text__text rte{% if block.settings.subtext_color %} text-subtext{% endif %}"
                  data-motion="fade-up"
                  data-motion-delay="{{ motion_delay }}"
                  {{ block.shopify_attributes }}
                >
                  {{ block.settings.text }}
                </motion-element>
                {%- assign motion_delay = motion_delay | plus: 50 -%}
              {%- when 'icon_with_text' -%}
                {%- if block.settings.heading != blank or block.settings.text != blank -%}
                  <motion-element
                    class="block rich-text__icon"
                    data-motion="fade-up"
                    data-motion-delay="{{ motion_delay }}"
                    {{ block.shopify_attributes }}
                  >
                    <div
                      class="icon-with-text gap-x-2 {{ classes }} items-{{ block.settings.vertical_alignment}}"
                      style="--icon-size: {{ block.settings.icon_width }}px;--icon-color: {{ block.settings.color.red }}, {{ block.settings.color.green }}, {{ block.settings.color.blue }};"
                    >
                      <div class="icon-with-text__media inline-flex items-center">
                        <div class="no-empty {{ block.settings.heading_size }}" style="width: 0;" aria-hidden="true">
                          &nbsp;
                        </div>
                        {%- if block.settings.image != blank -%}
                          <img
                            src="{{ block.settings.image | image_url }}"
                            {% if block.settings.image.alt != blank %}
                              alt="{{ block.settings.image.alt | escape }}"
                            {% else %}
                              role="presentation"
                            {% endif %}
                            height="auto"
                            width="auto"
                            loading="lazy"
                          >
                        {%- else -%}
                          {%- render 'icons', icon: block.settings.icon, size: 'custom' -%}
                        {%- endif -%}
                      </div>
                      <div class="flex flex-col gap-y-1">
                        {%- if block.settings.heading != blank -%}
                          <h3 class="inline-richtext {{ block.settings.heading_size }}">
                            {{- block.settings.heading -}}
                          </h3>
                        {%- endif -%}
                        {%- if block.settings.text != blank -%}
                          <div class="rte m-0 text-subtext">{{- block.settings.text -}}</div>
                        {%- endif -%}
                      </div>
                    </div>
                  </motion-element>
                  {%- assign motion_delay = motion_delay | plus: 50 -%}
                {%- endif -%}
              {%- when 'button' -%}
                {%- if block.settings.button_label != blank -%}
                  <motion-element class="block" data-motion="fade-up" data-motion-delay="{{ motion_delay }}">
                    {% render 'button',
                      button_style: block.settings.button_style,
                      button_link: block.settings.button_link,
                      button_label: block.settings.button_label,
                      button_icon: block.settings.button_icon
                    %}
                  </motion-element>
                  {%- assign motion_delay = motion_delay | plus: 50 -%}
                {%- endif -%}
              {%- when 'empty_space' -%}
                <div
                  class="empty-space no-empty"
                  style="--height: {{ block.settings.height }}px;--height-mobile: {{ block.settings.height_mobile }}px;"
                ></div>
            {%- endcase -%}
          {%- endfor -%}
        </div>
      </div>
    </div>
  </div>
</div>
{% schema %}
{
  "name": "t:sections.image-with-text.name",
  "disabled_on": {
    "groups": ["footer", "header", "custom.overlay"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:general.general.name"
    },
    {
      "type": "select",
      "id": "container",
      "options": [
        {
          "value": "full",
          "label": "t:general.container.options__full.label"
        },
        {
          "value": "fixed",
          "label": "t:general.container.options__fixed.label"
        }
      ],
      "default": "fixed",
      "label": "t:general.container.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:general.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:general.image.content"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:general.image.label"
    },
    {
      "type": "select",
      "id": "image_position",
      "label": "t:general.image_position.desktop.label",
      "options": [
        {
          "value": "left",
          "label": "t:general.image_position.options__left.label"
        },
        {
          "value": "right",
          "label": "t:general.image_position.options__right.label"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "image_width",
      "min": 40,
      "max": 60,
      "step": 1,
      "unit": "%",
      "label": "t:general.width.label",
      "default": 50
    },
    {
      "type": "header",
      "content": "t:general.header__content_settings.content"
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "label": "t:general.content_position.desktop.label",
      "default": "center",
      "options": [
        {
          "value": "start",
          "label": "t:general.vertical_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:general.vertical_alignment.options__2.label"
        },
        {
          "value": "end",
          "label": "t:general.vertical_alignment.options__3.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "desktop_content_alignment",
      "label": "t:general.content_alignment.desktop.label",
      "default": "left",
      "options": [
        {
          "value": "left",
          "label": "t:general.content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:general.content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:general.content_alignment.options__3.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:general.mobile.name"
    },
    {
      "type": "select",
      "id": "mobile_content_alignment",
      "label": "t:general.content_alignment.mobile.label",
      "default": "inherit",
      "options": [
        {
          "value": "inherit",
          "label": "t:general.content_alignment.options__inherit.label"
        },
        {
          "value": "left",
          "label": "t:general.content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:general.content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:general.content_alignment.options__3.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:general.divider.section_heading.content"
    },
    {
      "type": "checkbox",
      "id": "show_section_divider",
      "label": "t:general.divider.show_divider.label",
      "default": false
    },
    {
      "type": "select",
      "id": "divider_width",
      "label": "t:general.divider.width.label",
      "default": "fixed",
      "options": [
        {
          "value": "fixed",
          "label": "t:general.container.options__fixed.label"
        },
        {
          "value": "full",
          "label": "t:general.container.options__full.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:general.padding.section_heading.content"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "t:general.padding.top.label",
      "min": 0,
      "max": 120,
      "step": 2,
      "unit": "px",
      "default": 80
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "t:general.padding.bottom.label",
      "min": 0,
      "max": 120,
      "step": 2,
      "unit": "px",
      "default": 80
    }
  ],
  "blocks": [
    {
      "type": "subheading",
      "name": "t:general.subheading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "subheading",
          "label": "t:general.subheading.label",
          "default": "Add a tagline"
        }
      ]
    },
    {
      "type": "empty_space",
      "name": "t:general.empty_space.name",
      "settings": [
        {
          "type": "range",
          "id": "height",
          "label": "t:general.empty_space.height.label",
          "min": 0,
          "max": 50,
          "step": 1,
          "unit": "px",
          "default": 4
        },
        {
          "type": "header",
          "content": "t:general.header__mobile_settings.content"
        },
        {
          "type": "range",
          "id": "height_mobile",
          "label": "t:general.empty_space.height.label",
          "min": 0,
          "max": 50,
          "step": 1,
          "unit": "px",
          "default": 4
        }
      ]
    },
    {
      "type": "heading",
      "name": "t:general.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Talk about your brand",
          "label": "t:general.heading.label",
          "info": "t:general.heading.info"
        },
        {
          "type": "select",
          "id": "highlight_style",
          "label": "t:general.highlight_text.highlight_style.label",
          "options": [
            {
              "value": "none",
              "label": "t:general.highlight_text.highlight_style.options.option__1.label"
            },
            {
              "value": "hand_drawn_circle",
              "label": "t:general.highlight_text.highlight_style.options.option__2.label"
            },
            {
              "value": "thick_underline",
              "label": "t:general.highlight_text.highlight_style.options.option__3.label"
            },
            {
              "value": "wave_underline",
              "label": "t:general.highlight_text.highlight_style.options.option__4.label"
            }
          ]
        },
        {
          "type": "select",
          "id": "highlight_font_style",
          "label": "t:general.highlight_text.highlight_font_style.label",
          "options": [
            {
              "value": "italic",
              "label": "t:general.highlight_text.highlight_font_style.options.option__1.label"
            },
            {
              "value": "normal",
              "label": "t:general.highlight_text.highlight_font_style.options.option__2.label"
            }
          ]
        },
        {
          "type": "color",
          "id": "highlight_style_color",
          "label": "t:general.highlight_text.highlight_style_color.label"
        },
        {
          "type": "color",
          "id": "highlight_text_color",
          "label": "t:general.highlight_text.highlight_text_color.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "label": "t:general.text_size.heading.label",
          "default": "hd2",
          "options": [
            {
              "value": "h5",
              "label": "t:general.text_size.options__h5.label"
            },
            {
              "value": "h4",
              "label": "t:general.text_size.options__h4.label"
            },
            {
              "value": "h3",
              "label": "t:general.text_size.options__h3.label"
            },
            {
              "value": "h2",
              "label": "t:general.text_size.options__h2.label"
            },
            {
              "value": "h1",
              "label": "t:general.text_size.options__h1.label"
            },
            {
              "value": "hd2",
              "label": "t:general.text_size.options__hd2.label"
            },
            {
              "value": "hd1",
              "label": "t:general.text_size.options__hd1.label"
            }
          ]
        }
      ]
    },
    {
      "type": "text",
      "name": "t:general.text.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
          "label": "t:general.text.label"
        },
        {
          "type": "checkbox",
          "id": "subtext_color",
          "label": "t:general.use_subtext_color.label",
          "default": true
        }
      ]
    },
    {
      "type": "icon_with_text",
      "name": "t:sections.image-with-text.blocks.icon_with_text.name",
      "settings": [
        {
          "type": "header",
          "content": "t:general.icon.label"
        },
        {
          "type": "select",
          "id": "icon",
          "label": "t:general.icon.label",
          "options": [
            {
              "value": "none",
              "label": "t:general.icon.options__1.label"
            },
            {
              "value": "car-simple",
              "label": "t:general.icon.options__2.label"
            },
            {
              "value": "truck",
              "label": "t:general.icon.options__3.label"
            },
            {
              "value": "package",
              "label": "t:general.icon.options__4.label"
            },
            {
              "value": "currency-circle-dollar",
              "label": "t:general.icon.options__5.label"
            },
            {
              "value": "gift",
              "label": "t:general.icon.options__6.label"
            },
            {
              "value": "heart",
              "label": "t:general.icon.options__7.label"
            },
            {
              "value": "globe",
              "label": "t:general.icon.options__8.label"
            },
            {
              "value": "check",
              "label": "t:general.icon.options__9.label"
            },
            {
              "value": "arrow-up-left",
              "label": "t:general.icon.options__10.label"
            },
            {
              "value": "lightning",
              "label": "t:general.icon.options__11.label"
            },
            {
              "value": "calendar-blank",
              "label": "t:general.icon.options__12.label"
            },
            {
              "value": "bell-ringing",
              "label": "t:general.icon.options__13.label"
            },
            {
              "value": "location",
              "label": "t:general.icon.options__14.label"
            },
            {
              "value": "tag",
              "label": "t:general.icon.options__15.label"
            },
            {
              "value": "map-pin",
              "label": "t:general.icon.options__16.label"
            },
            {
              "value": "smiley",
              "label": "t:general.icon.options__17.label"
            },
            {
              "value": "stool",
              "label": "t:general.icon.options__18.label"
            },
            {
              "value": "clock",
              "label": "t:general.icon.options__19.label"
            },
            {
              "value": "phone",
              "label": "t:general.icon.options__20.label"
            },
            {
              "value": "chat",
              "label": "t:general.icon.options__21.label"
            },
            {
              "value": "paperplane",
              "label": "t:general.icon.options__22.label"
            },
            {
              "value": "sliders",
              "label": "t:general.icon.options__23.label"
            },
            {
              "value": "sound",
              "label": "t:general.icon.options__24.label"
            },
            {
              "value": "music",
              "label": "t:general.icon.options__25.label"
            },
            {
              "value": "airplane",
              "label": "t:general.icon.options__26.label"
            },
            {
              "value": "alarm",
              "label": "t:general.icon.options__27.label"
            },
            {
              "value": "play-list",
              "label": "t:general.icon.options__28.label"
            },
            {
              "value": "drop-slash",
              "label": "t:general.icon.options__29.label"
            },
            {
              "value": "pause-circle",
              "label": "t:general.icon.options__30.label"
            },
            {
              "value": "acorn",
              "label": "t:general.icon.options__34.label"
            },
            {
              "value": "leaf",
              "label": "t:general.icon.options__35.label"
            }
          ],
          "default": "heart"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:general.custom_image.label"
        },
        {
          "type": "range",
          "id": "icon_width",
          "label": "t:sections.image-with-text.blocks.icon_with_text.settings.icon_width.label",
          "min": 10,
          "max": 50,
          "step": 2,
          "unit": "px",
          "default": 24
        },
        {
          "type": "color",
          "id": "color",
          "label": "t:sections.image-with-text.blocks.icon_with_text.settings.icon_color.label",
          "default": "#000000"
        },
        {
          "type": "header",
          "content": "t:general.text.label"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "t:general.heading.label",
          "default": "Icon with text"
        },
        {
          "type": "select",
          "id": "heading_size",
          "label": "t:general.text_size.heading.label",
          "default": "h5",
          "options": [
            {
              "value": "h5",
              "label": "t:general.text_size.options__h5.label"
            },
            {
              "value": "h4",
              "label": "t:general.text_size.options__h4.label"
            },
            {
              "value": "h3",
              "label": "t:general.text_size.options__h3.label"
            },
            {
              "value": "h2",
              "label": "t:general.text_size.options__h2.label"
            },
            {
              "value": "h1",
              "label": "t:general.text_size.options__h1.label"
            },
            {
              "value": "hd2",
              "label": "t:general.text_size.options__hd2.label"
            },
            {
              "value": "hd1",
              "label": "t:general.text_size.options__hd1.label"
            }
          ]
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:general.text.label"
        },
        {
          "type": "select",
          "id": "vertical_alignment",
          "label": "t:general.vertical_alignment.label",
          "default": "start",
          "options": [
            {
              "value": "start",
              "label": "t:general.vertical_alignment.options__1.label"
            },
            {
              "value": "center",
              "label": "t:general.vertical_alignment.options__2.label"
            },
            {
              "value": "end",
              "label": "t:general.vertical_alignment.options__3.label"
            }
          ]
        }
      ]
    },
    {
      "type": "button",
      "name": "t:general.button.name",
      "limit": 1,
      "settings": [
        {
          "type": "header",
          "content": "t:general.button.header.content"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "t:general.button.button_label.label",
          "default": "Button label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:general.button.button_link.label"
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "t:general.button.button_style.label",
          "default": "btn--primary",
          "options": [
            {
              "value": "btn--primary",
              "label": "t:general.button.button_style.options__1.label"
            },
            {
              "value": "btn--secondary",
              "label": "t:general.button.button_style.options__2.label"
            },
            {
              "value": "btn--underline",
              "label": "t:general.button.button_style.options__4.label"
            },
            {
              "value": "btn--plain",
              "label": "t:general.button.button_style.options__7.label"
            }
          ]
        },
        {
          "type": "select",
          "id": "button_icon",
          "label": "t:general.button.button_icon.label",
          "options": [
            {
              "value": "none",
              "label": "t:general.button.button_icon.options__1.label"
            },
            {
              "value": "caret-right",
              "label": "t:general.button.button_icon.options__2.label"
            },
            {
              "value": "caret-left",
              "label": "t:general.button.button_icon.options__22.label"
            },
            {
              "value": "arrow-right",
              "label": "t:general.button.button_icon.options__3.label"
            },
            {
              "value": "arrow-left",
              "label": "t:general.button.button_icon.options__23.label"
            },
            {
              "value": "close",
              "label": "t:general.button.button_icon.options__4.label"
            },
            {
              "value": "home",
              "label": "t:general.button.button_icon.options__5.label"
            },
            {
              "value": "search",
              "label": "t:general.button.button_icon.options__6.label"
            },
            {
              "value": "hamburger",
              "label": "t:general.button.button_icon.options__7.label"
            },
            {
              "value": "pencil",
              "label": "t:general.button.button_icon.options__8.label"
            },
            {
              "value": "plus",
              "label": "t:general.button.button_icon.options__9.label"
            },
            {
              "value": "cart",
              "label": "t:general.button.button_icon.options__10.label"
            },
            {
              "value": "account",
              "label": "t:general.button.button_icon.options__11.label"
            },
            {
              "value": "sign-in",
              "label": "t:general.button.button_icon.options__12.label"
            },
            {
              "value": "chat",
              "label": "t:general.button.button_icon.options__13.label"
            },
            {
              "value": "download",
              "label": "t:general.button.button_icon.options__14.label"
            },
            {
              "value": "upload",
              "label": "t:general.button.button_icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:general.button.button_icon.options__16.label"
            },
            {
              "value": "play-outline",
              "label": "t:general.button.button_icon.options__17.label"
            },
            {
              "value": "pause",
              "label": "t:general.button.button_icon.options__18.label"
            },
            {
              "value": "stop",
              "label": "t:general.button.button_icon.options__19.label"
            },
            {
              "value": "speaker",
              "label": "t:general.button.button_icon.options__20.label"
            },
            {
              "value": "setting",
              "label": "t:general.button.button_icon.options__21.label"
            }
          ],
          "default": "none"
        }
      ]
    },
    {
      "type": "badge",
      "name": "t:sections.image-with-text.blocks.badge.name",
      "limit": 1,
      "settings": [
        {
          "type": "header",
          "content": "t:general.general.name"
        },
        {
          "type": "color_scheme",
          "id": "color_scheme",
          "label": "t:general.colors.label",
          "default": "scheme-1"
        },
        {
          "type": "text",
          "id": "text",
          "label": "t:general.text.label",
          "default": "image with text - spinning text -",
          "info": "t:sections.image-with-text.blocks.badge.settings.text.info"
        },
        {
          "type": "header",
          "content": "t:general.header__image_settings.content"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:general.image.label"
        },
        {
          "type": "header",
          "content": "t:general.header__mobile_settings.content"
        },
        {
          "type": "select",
          "id": "position_mobile",
          "label": "t:general.position.label",
          "default": "right",
          "options": [
            {
              "value": "left",
              "label": "t:general.content_alignment.options__1.label"
            },
            {
              "value": "right",
              "label": "t:general.content_alignment.options__3.label"
            }
          ]
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.image-with-text.name",
      "blocks": [
        {
          "type": "badge"
        },
        {
          "type": "subheading"
        },
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "button"
        }
      ]
    }
  ]
}
{% endschema %}
