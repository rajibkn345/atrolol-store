<div class="compare-row--options flex flex-col gap-3">
  {%- for option in product.options_with_values -%}
    {%- liquid
      assign swatch_count = option.values | map: 'swatch' | compact | size
      assign picker_type = 'text'
      assign image_size = 32

      if swatch_count > 0
        assign picker_type = 'swatch'
      else
        assign option_name_downcase = option.name | downcase

        if settings.color_swatch_trigger != blank
          assign color_swatch_trigger = settings.color_swatch_trigger | downcase | split: ','
          assign has_color = color_swatch_trigger | where: option_name_downcase | first

          if has_color != blank
            assign picker_type = 'color'
          elsif option_name_downcase contains 'colour'
            assign color_swatch_trigger = color_swatch_trigger | replace: 'color', 'colour'
            assign has_color = color_swatch_trigger | where: option_name_downcase | first
            if has_color != blank
              assign picker_type = 'color'
            endif
          endif
        endif
      endif

      assign css_class = ''
      unless picker_type == 'text'
        assign css_class = ' swatches flex flex-wrap gap-2'
      else
        assign css_class = ' flex flex-wrap gap-1'
      endunless
    -%}
    <div class="compare-row--option flex flex-col {% if picker_type == 'text' %}gap-1{% else %}gap-2{% endif %}">
      <span class="compare-row--option-label font-body-bolder block">{{ option.name }}</span>
      <div class="compare-row--option-values{{ css_class }}">
        {%- unless picker_type == 'text' -%}
          {%- for value in option.values -%}
            {%- liquid
              assign swatch_focal_point = null
              if value.swatch.image and picker_type == 'swatch'
                assign image_url = value.swatch.image | image_url: width: image_size
                assign swatch_value = 'url(' | append: image_url | append: ')'
                assign swatch_focal_point = value.swatch.image.presentation.focal_point
              elsif value.swatch.color and picker_type == 'swatch'
                assign swatch_value = 'rgb(' | append: value.swatch.color.rgb | append: ')'
              else
                assign swatch_value = null
              endif
            -%}
            {%- if picker_type == 'swatch' -%}
              {%- liquid
                assign swatch_value = null
                if value.swatch.image
                  assign image_url = value.swatch.image | image_url: width: image_size
                  assign swatch_value = 'url(' | append: image_url | append: ')'
                elsif value.swatch.color
                  assign swatch_value = 'rgb(' | append: value.swatch.color.rgb | append: ')'
                endif
              -%}
              <div
                class="relative"
                data-tooltip
              >
                <span class="tooltip pointer-events-none">{{ value | escape }}</span>
                <span
                  class="swatch-color block"
                  style="--swatch-background: {{ swatch_value }};{% if swatch_focal_point %} --swatch-focal-point: {{ swatch_focal_point }};{% endif %}"
                ></span>
              </div>
            {%- elsif picker_type == 'color' -%}
              {%- liquid
                if block.settings.swatch_type == 'variant_image' and value.variant.image != blank
                  assign image_url = value.variant.image | image_url: width: image_size
                  assign swatch_value = 'url(' | append: image_url | append: ')'
                elsif swatch_value == blank
                  assign file_extension = file_extension | default: 'png'
                  assign file_name = value | handle | append: '.' | append: file_extension
                  assign swatch_fallback = value | split: ' ' | last | handle
                  assign swatch_fallback_override = false

                  assign value_downcase = value | downcase
                  assign swatch_config = settings.swatch_list | newline_to_br | split: '<br />'
                  for swatch in swatch_config
                    assign swatch_parts = swatch | strip | split: ':'
                    assign swatch_name = swatch_parts.first | downcase | strip

                    if swatch_name == value_downcase
                      assign swatch_val = swatch_parts.last | strip
                      if swatch_val contains '#'
                        assign swatch_fallback = swatch_val
                        assign swatch_fallback_override = true
                      else
                        assign file_name = swatch_val
                      endif
                      break
                    endif
                  endfor

                  assign swatch_image = blank
                  if images[file_name] != blank
                    assign swatch_image = images[file_name] | image_url: width: image_size
                  elsif file_name contains '//cdn.shopify.com/'
                    assign swatch_image = file_name
                  endif

                  assign swatch_value = swatch_fallback | append: ';'
                  if swatch_fallback_override == false and swatch_image != blank
                    assign swatch_value = swatch_value | append: 'background-image: url(' | append: swatch_image | append: ');'
                  endif
                endif
              -%}
              <div
                class="relative"
                data-tooltip
              >
                <span class="tooltip pointer-events-none">{{ value | escape }}</span>
                <span class="swatch-color block" style="--swatch-background: {{ swatch_value }}"></span>
              </div>
            {%- endif -%}
          {%- endfor -%}
        {%- else -%}
          {%- for value in option.values -%}
            <span class="">
              {{- value -}}
              {%- unless forloop.last -%},{%- endunless -%}
            </span>
          {%- endfor -%}
        {%- endunless -%}
      </div>
    </div>
  {%- endfor -%}
</div>
